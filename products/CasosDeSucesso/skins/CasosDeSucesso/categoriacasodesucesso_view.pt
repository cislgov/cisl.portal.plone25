<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en"
      lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">

  <head><title></title></head>

  <metal:javascript_head fill-slot="javascript_head_slot">
    <tal:block define="macro here/archetypes_custom_js/macros/javascript_head | nothing"
               condition="macro">
      <metal:block use-macro="macro" />
    </tal:block>
    <tal:comment replace="nothing">
      Many of the following defines duplicated from the tal:defines in the
      main slot. With base_edit, edit_macros could be reused as it was defined
      for the entire document. base_view uses main_template and thus must
      create additional defines for each slot it fills.
    </tal:comment>
    <tal:js define="fields python:here.Schema().viewableFields(here);
                    js python:here.getUniqueWidgetAttr(fields, 'helper_js')"
            condition="js"
            repeat="item js">
      <script type="text/javascript"
              charset="iso-8859-1"
              tal:condition="python:exists('portal/%s' % item)"
              tal:attributes="src string:$portal_url/$item">
      </script>
    </tal:js>
    <tal:block define="portal_type python:here.getPortalTypeName().lower().replace(' ', '_');
                       view_template python:'%s_view' % portal_type;
                       view_macros python:path('here/%s/macros|nothing' % view_template);
                       macro view_macros/js | nothing"
               condition="macro">
      <metal:block use-macro="macro" />
    </tal:block>
  </metal:javascript_head>

  <metal:css fill-slot="css_slot">
    <tal:comment replace="nothing">
      Many of the following defines duplicated from the tal:defines in the
      main slot. With base_edit, edit_macros could be reused as it was defined
      for the entire document. base_view uses main_template and thus must
      create additional defines for each slot it fills.
    </tal:comment>
    <tal:css define="fields python:here.Schema().viewableFields(here);
                     css python:here.getUniqueWidgetAttr(fields, 'helper_css')"
             condition="css"
             repeat="item css">
      <style type="text/css"
             media="all"
             tal:condition="python:exists('portal/%s' % item)"
             tal:content="structure string:<!-- @import url($portal_url/$item); -->">
      </style>
    </tal:css>
    <tal:block define="portal_type python:here.getPortalTypeName().lower().replace(' ', '_');
                       view_template python:'%s_view' % portal_type;
                       view_macros python:path('here/%s/macros|nothing' % view_template);
                       macro view_macros/css | nothing"
               condition="macro">
      <metal:block use-macro="macro" />
    </tal:block>
  </metal:css>
<metal:block metal:fill-slot="top_slot"
             tal:define="isAnon python:not context.portal_membership.getAuthenticatedMember().has_role('Authenticated');
             		    dummy python:isAnon and request.set('disable_border',1) or None" />
  <body>
    <metal:fill fill-slot="main">
      <metal:main_macro define-macro="main"
            tal:define="portal_type python:here.getPortalTypeName().lower().replace(' ', '_');
            base_macros here/base/macros;
            view_template python:'%s_view' % portal_type;
            view_macros python:path('here/%s/macros|nothing' % view_template);
            header_macro view_macros/header | header_macro | base_macros/header;
            body_macro view_macros/body | body_macro | base_macros/body;
            folderlisting_macro view_macros/folderlisting | folderlisting | base_macros/folderlisting;
            footer_macro view_macros/footer | footer_macro | base_macros/footer;
            errors python:request.get('errors', {})">

        <metal:use_header use-macro="header_macro" />
        <metal:use_body use-macro="body_macro" />
        
        
		
		<div>
		    <tal:def define="pw python: context.portal_workflow;
						    			results context/obter_casosdesucesso;">
			                    		
		   		<div tal:condition="here/Description">
					<br/>
		   			<strong tal:content="here/Description">Description</strong>
		   		</div>
		   		
			    <tal:listing condition="results">
					
					<br/>
			        <h2>Casos de Sucesso</h2>
		
		            <ul id="listagem_casosdesucesso">
		                <tal:entry tal:repeat="item results">
		
							<tal:def define="item_url item/getURL|item/absolute_url;
											 utils context/@@casodesucesso_utils_view;
											 logo python: utils.getLogoCasoDeSucesso(item_url);
											 review_state item/review_state;">
		
			                    <li>
			                    
			                    	<div>
				                   	 	<span class="summary">
				                        	<a class="state-published"
				                               tal:content="item/Title"
				                               tal:attributes="href item_url;
				                               				   class string:state-${review_state}" />
				                        </span>
				
				                        &mdash;
				                        
				                        <span class="documentByLine" tal:content="item/getOrgao_casodesucesso"/>
				                    </div>
									
			                    	<div tal:condition="logo" class="logo">
			                    		<img tal:attributes="src logo"/>
			                    	</div>
									<div tal:condition="python: review_state=='published'">	
				                       	<span class="documentByLine" tal:content="python: 'Publicado em %s' % DateTime(item.ModificationDate).strftime('%d/%m/%Y')"/>
			                        </div>
			                        <div class="description" tal:content="structure item/Description" >
			                        </div>
			                    	<div class="visualClear"></div>
			                    </li>
			                    
							</tal:def>
		                </tal:entry>
		            </ul>
		            
		        </tal:listing>		
				
			</tal:def>
		</div>        
        
        
        
        <metal:use_body use-macro="folderlisting_macro" />
        <metal:use_footer use-macro="footer_macro" />

      </metal:main_macro>
    </metal:fill>
  </body>
</html>

